/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Defaults which you can freely override

@column-width       :     1 ;
@gutter-width       :     0 ;
@columns        :    12 ;
@total-width      :  100% ;
@content-total-width  : 990px ;



// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;

// Set @total-width to 100% for a fluid layout
//@total-width: @gridsystem-width;

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// @min-width: 960;
// @correction: 0.5 / @min-width * 100 * 1%;



// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix () {
  *zoom:1;
  
  &:before,
  &:after {
      content:"";
      display:table;
  }
  &:after {
      clear:both;
  }
}


//////////
// GRID //
//////////

.row (@columns:@columns) {
  display: block;
  width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
  margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
  // *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
  // *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
  .clearfix;
}
.column (@x,@columns:@columns) {
  display: inline;
  float: left;
  width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
  margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);

  -webkit-box-sizing  : border-box ;
  -moz-box-sizing   : border-box ;
  box-sizing      : border-box ;
}
.column-margin (@x,@columns:@columns) {
  margin: 0 @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-margin-left (@x,@columns:@columns) {
  margin-left: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-margin-right (@x,@columns:@columns) {
  margin-right: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-margin-left-negatif (@x,@columns:@columns) {
  margin-left: -@total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-margin-right-negatif (@x,@columns:@columns) {
  margin-right: -@total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-padding (@x,@columns:@columns) {
  padding: 0 @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-padding-left (@x,@columns:@columns) {
  padding-left: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.column-padding-right (@x,@columns:@columns) {
  padding-right: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
}
.push (@offset:1) {
  margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull (@offset:1) {
  margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}